name: 'Move Closed Issue to Done'

on:
  issues:
    types: [closed] # 이슈가 닫힐 때 실행

jobs:
  move_issue_to_done:
    name: Move Issue to Done
    runs-on: ubuntu-latest

    permissions:
      issues: read
      projects: write

    steps:
      - name: 'Find issue and update project'
        uses: actions/github-script@v7
        env:
          PROJECT_ID: ${{ secrets.ORG_PROJECT_ID }}
          STATUS_FIELD_ID: ${{ secrets.ORG_STATUS_FIELD_ID }}
          DONE_OPTION_ID: ${{ secrets.ORG_STATUS_DONE_ID }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. 환경 변수 및 닫힌 이슈의 Node ID 가져오기
            const { PROJECT_ID, STATUS_FIELD_ID, DONE_OPTION_ID } = process.env;
            const issueNodeId = "${{ github.event.issue.node_id }}";
            console.log(`Processing closed issue Node ID: ${issueNodeId}`);

            // 2. 이슈 Node ID를 이용해 프로젝트 아이템 ID(Item ID) 찾기
            // (워크플로 1의 4번 단계와 동일한 쿼리)
            const query = `
              query($issueNodeId: ID!) {
                node(id: $issueNodeId) {
                  ... on Issue {
                    projectItems(first: 20) {
                      nodes {
                        id
                        project { id }
                      }
                    }
                  }
                }
              }`;
            const variables = { issueNodeId };
            const result = await github.graphql(query, variables);
            
            const projectItem = result.node.projectItems.nodes.find(item => item.project.id === PROJECT_ID);

            if (!projectItem) {
              console.log(`Issue is not in project ${PROJECT_ID}. Skipping.`);
              return;
            }
            const projectItemId = projectItem.id;
            console.log(`Found Project Item ID: ${projectItemId}`);

            // 3. 프로젝트 아이템의 상태(Status)를 'Done'으로 변경
            // (워크플로 1의 5번 단계와 동일한 뮤테이션)
            const mutation = `
              mutation($project_id: ID!, $item_id: ID!, $field_id: ID!, $option_id: String!) {
                updateProjectV2ItemFieldValue(
                  input: {
                    projectId: $project_id,
                    itemId: $item_id,
                    fieldId: $field_id,
                    value: { singleSelectOptionId: $option_id }
                  }
                ) {
                  clientMutationId
                }
              }`;
            const mutationVars = {
              project_id: PROJECT_ID,
              item_id: projectItemId,
              field_id: STATUS_FIELD_ID,
              option_id: DONE_OPTION_ID // 'Done' ID 사용
            };
            
            await github.graphql(mutation, mutationVars);
            console.log(`Successfully updated closed issue status to 'Done'.`);
